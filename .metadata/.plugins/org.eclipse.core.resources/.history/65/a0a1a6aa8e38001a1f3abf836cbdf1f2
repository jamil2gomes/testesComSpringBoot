package br.com.testeComSpring.repository;

import static org.junit.jupiter.api.Assertions.assertAll;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.math.BigDecimal;

import org.assertj.core.util.Arrays;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.jdbc.EmbeddedDatabaseConnection;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.junit4.SpringRunner;

import br.com.testeComSpring.model.Cidade;
import br.com.testeComSpring.model.Cliente;
import br.com.testeComSpring.model.UF;

@RunWith(SpringRunner.class)
@DataJpaTest
@AutoConfigureTestDatabase(connection = EmbeddedDatabaseConnection.H2)
public class CidadeRepositoryTest {

	@Autowired
	CidadeRepository cidadeRepository;
	
	@Rule
	public ExpectedException expectedException = ExpectedException.none();
	
	private Cidade cidade1, cidade2;
	
	@Before
	public void setUp() {
		cidade1 = new Cidade("Sao Luis", UF.MA, new BigDecimal(10.0));
		cidade2 = new Cidade("Sao Luis", UF.BA, new BigDecimal(10.0));
	}
	
	@Test
	public void deveSalvarCidade() {
		
		cidadeRepository.saveAll(Arrays.asList(cidade1, cidade2));
		
		Cliente clienteEncontrado = clienteRepository.findByTelefone("32344332");

		assertAll(() -> assertEquals("Jamil", clienteEncontrado.getNome()),
				  () -> assertEquals("Rua 1",clienteEncontrado.getEndereco())
                 );
		
		clienteRepository.deleteAll();
	}
	
}
