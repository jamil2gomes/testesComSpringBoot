package br.com.testeComSpring.model;

import java.util.Objects;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.validation.constraints.NotEmpty;

@Entity
public class Frete {
	
	@Id@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@NotEmpty(message = "Descricao não pode ser vazio")
	private String descricao;
	
	@NotEmpty(message = "Peso não pode ser vazio")
	private Double peso;
	
	@NotEmpty(message = "Valor não pode ser vazio")
	private Double valor;
	
	@ManyToOne @JoinColumn(name = "cliente_id") @NotEmpty(message = "Cliente não pode ser vazio")
	private Cliente cliente;
	
	@ManyToOne @JoinColumn(name = "cidade_id") @NotEmpty(message = "Cidade não pode ser vazio")
	private Cidade cidade;
	
	public Frete() {}

	public Frete(String descricao, Double peso, Double valor, Cliente cliente, Cidade cidade) {
		this.descricao = descricao;
		this.peso = peso;
		this.valor = valor;
		this.cliente = cliente;
		this.cidade = cidade;
	}

	public Long getId() {return id;}

	public String getDescricao() {return descricao;}

	public void setDescricao(String descricao) {this.descricao = descricao;}

	public Double getPeso() {return peso;}

	public void setPeso(Double peso) {this.peso = peso;}

	public Double getValor() {return valor;}

	public void setValor(Double valor) {this.valor = valor;}

	public Cliente getCliente() {return cliente;}

	public void setCliente(Cliente cliente) {this.cliente = cliente;}

	public Cidade getCidade() {return cidade;}

	public void setCidade(Cidade cidade) {this.cidade = cidade;	}

	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Frete other = (Frete) obj;
		return Objects.equals(id, other.id);
	}
	
	
	
	

}
